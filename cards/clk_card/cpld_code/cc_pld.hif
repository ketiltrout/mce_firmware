HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			4 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=1,LEVEL=0,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			3 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			2 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
		}
	}
	8mux.tdf
	{
		8mux [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [sel,data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data0_6,data0_7,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data1_6,data1_7,result0,result1,result2,result3,result4,result5,result6,result7];
		}
	}
	cc_pld.gdf
	{
		cc_pld [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	cc_pld::(0,0):(0): cc_pld.gdf
	{
		8mux::(0,0):(13): 8mux.tdf
		{
			lpm_mux:2:(51,2):(52,lpm_mux_component): lpm_mux.tdf
			{
				altshift:3:(89,2):(55,external_latency_ffs): altshift.tdf;
				muxlut:4:(182,21):(77): muxlut.tdf;
				muxlut:4:(182,21):(92): muxlut.tdf;
				muxlut:4:(182,21):(107): muxlut.tdf;
				muxlut:4:(182,21):(122): muxlut.tdf;
				muxlut:4:(182,21):(137): muxlut.tdf;
				muxlut:4:(182,21):(152): muxlut.tdf;
				muxlut:4:(182,21):(167): muxlut.tdf;
				muxlut:4:(182,21):(182): muxlut.tdf;
			}
		}
	}
}
